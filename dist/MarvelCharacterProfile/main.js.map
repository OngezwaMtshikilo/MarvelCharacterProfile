{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/characterdata.service.ts","webpack:///./src/app/managecharacters/managecharacters.component.css","webpack:///./src/app/managecharacters/managecharacters.component.html","webpack:///./src/app/managecharacters/managecharacters.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagecharactersComponent } from './managecharacters/managecharacters.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:ManagecharactersComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n  </div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MarvelCharacterProfile';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ManagecharactersComponent } from './managecharacters/managecharacters.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ManagecharactersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { charactermodel } from './models/charactermodel';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpClient, HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterdataService {\n  baseUrl = environment.baseWithApiUrl;\n  constructor(private http: HttpClient, private router: Router) { } \n\n  getCharacters(): Observable<Array<charactermodel>>\n  {\n    try {\n      return this.http.get<Array<charactermodel>>(this.baseUrl+'public/characters?apikey=de56a70bee6bd6f729cbfd9575018959')\n    } catch (error) {\n      console.log(\"failed to retrieve characters\", error)\n    }\n  } \n}\n\n@Injectable()\nexport class MyHttpInterceptor implements HttpInterceptor {\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (!req.headers.has('Content-Type')) {\n            req = req.clone({ headers: req.headers.set('Access-Control-Allow-Origin', '*') });\n        }\n\n        req = req.clone({ headers: req.headers.set('Access-Control-Allow-Origin', '*') });\n        return next.handle(req);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZWNoYXJhY3RlcnMvbWFuYWdlY2hhcmFjdGVycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Characters</h1>\\n\\n<br/>\\n<input type=\\\"button\\\" value=\\\"Execute\\\" (click)=\\\"loadCharacters()\\\" class=\\\"btn btn-success\\\"/>\"","import { Component, OnInit } from '@angular/core';\nimport { CharacterdataService } from '../characterdata.service';\nimport { Subscription } from 'rxjs';\nimport { charactermodel } from '../models/charactermodel';\n\n@Component({\n  selector: 'app-managecharacters',\n  templateUrl: './managecharacters.component.html',\n  styleUrls: ['./managecharacters.component.css']\n})\nexport class ManagecharactersComponent implements OnInit {\n  loadCharactersSub: Subscription;\n  characters: Array<any>;\n  constructor(private dataService: CharacterdataService) { }\n\n  ngOnInit() {\n    this.loadCharactersSub = this.dataService.getCharacters().subscribe(\n      data => this.characters = data);\n      console.log(this.characters);\n      \n  }\n\n  ngOnDestroy(): void {\n    if(this.loadCharactersSub)\n    {\n      this.loadCharactersSub.unsubscribe();\n    }\n  }\n\n  loadCharacters()\n  {\n    this.dataService.getCharacters();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n baseUrl: 'https://developer.marvel.com:443/',\n apiUrl:'v1/',\n baseWithApiUrl:'https://developer.marvel.com:443/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}